page.title=Android SDK のインストール
@jd:body


<p>このページでは、Android SDK をインストールして、開発環境を設定する方法について説明します。SDK をまだダウンロードしていない場合は、[<a href="{@docRoot}sdk/index.html">ダウンロード</a>] ページからダウンロードしてください。SDK をダウンロードした後に、このページの手順を行ってください。</p>

<p>インストール中に問題が発生した場合は、このページの下部にある<a href="#installnotes">インストールに関する注意事項</a>を参照してください。</p>

<h4 style="margin-top">アップグレードする場合</h4>
<p>SDK の以前のバージョンを使用してアプリケーションを既に開発している場合は、このページの代わりに、<a href="upgrading.html"><strong></strong>SDK のアップグレード</a></b> をご覧ください。
</p>


<h2 id="setup">インストールの準備</h2>

<p>インストールを始める前に、開発用マシンが<a href="requirements.html">システム要件</a>を満たしていることを確認してください。
</p>

<p>Eclipse 環境に Android Development Tools（ADT）プラグインを組み込んだ開発環境は、Android 向け開発の初心者に最適です。プラグインを利用する場合は、コンピュータに Eclipse の適切なバージョン（3.3 以降）がインストールされていることを確認してください。Eclipse のインストールが必要な場合は、次の場所からダウンロードできます: </p>

<p style="margin-left:2em;"><a href=
"http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a></p>

<p>Eclipse の Java バージョンまたは RCP バージョンをおすすめします。 </p>

<h2 id="installingsdk">SDK のインストール</h2>

<p>SDK のダウンロード後、お使いのマシンの適切な場所に .zip アーカイブを展開します。デフォルトでは、SDK ファイルは <code>android_sdk_<em>&lt;platform</em>&gt;_<em>&lt;release&gt;</em></code> ディレクトリに展開されます。このディレクトリには、ドキュメントのローカル コピー（ブラウザで <code>documentation.html</code> を開くと参照できます）と、<code>tools/</code>、<code>add-ons/</code>、<code>platforms/</code> などのサブディレクトリが含まれます。<code>platforms/</code> のサブディレクトリ内には、プラットフォームの各バージョンに固有のコードのサンプルが含まれる <code>samples/</code> があります。</p>

<p>システム上に展開した SDK ディレクトリの名前とパスをメモしておきましょう。Android プラグインの設定時や、SDK ツールの使用時にこの SDK ディレクトリを参照する必要があります。</p>

<p>SDK のプライマリディレクトリである <code>tools</code> のパスを、システム PATH に追加することをおすすめします。<code>tools/</code> プライマリディレクトリは、SDK フォルダのルートにあります。<code>tools</code> をパスに追加すると、Android Debug Bridge（adb）やその他のコマンド ライン <a href="{@docRoot}guide/developing/tools/index.html">ツール</a>を、ツールの格納されたディレクトの完全なパスを指定せずに実行できるようになります。 </p>
<ul>
    <li>Linux 上では <code>~/.bash_profile</code> ファイルまたは <code>~/.bashrc</code> ファイルを編集します。PATH 環境変数を設定している行を探し、その行に <code>tools/</code> ディレクトリへの完全なパスを追加します。PATH を設定する行が無い場合は、次の行を追加します:</li>

    <ul><code>export PATH=${PATH}:<em>&lt;your_sdk_dir&gt;</em>/tools</code></ul>

    <li>Mac 上では <code>.bash_profile</code> のホーム ディレクトリの内から同じファイルを検索し、Linux と同じように設定します。マシン上にまだ <code>.bash_profile</code> が無い場合は、ファイルを作成することができます。 </li>

    <li>Windows 上では、[マイ コンピュータ] を右クリックし、[プロパティ] を選択します。[詳細設定] タブで [環境変数] ボタンをクリックし、表示されたダイアログで [システム環境変数] の [Path] をダブルクリックします。その Path に <code>tools/</code> ディレクトリへの完全なパスを追加します。 </li>
  </ul>

<p>今後 SDK をアップグレードする際は、PATH の設定を更新することを忘れないでください。別のディレクトリに SDK を展開する場合は、その新しい場所を PATH に設定する必要があります。</p>

<p>Eclipse IDE を開発環境として使用する場合、Android Development Tools プラグインをインストールして Eclipse を設定する方法について、次のセクションの情報を参照してください。Eclipse を使用しない場合は、別の IDE を使用して Android アプリケーションを開発してから、SDK に含まれているツールを使用してコンパイル、デバッグ、配布を行うことができます（この場合は、<a href="#next">次のステップ</a>に進んでください）。</p>


<h2 id="installingplugin">Eclipse 用 ADT プラグインのインストール</h2>

<p>Android では、Android Development Tools（ADT）という Eclipse IDE 用のカスタム プラグインを提供しています。このプラグインは、Android アプリケーションの構築を可能にするために設計された、強力な統合環境です。プラグインによって Eclipse の機能が拡張され、新しい Android プロジェクトの設定、アプリケーションの UI の作成、Android Framework API に基づくコンポーネントの追加、Android SDK ツールを使用したアプリケーションのデバッグが可能になります。さらに、アプリケーションを配布するための署名済み（または未署名）の APK のエクスポートも簡単にできるようになります。</p>

<p>一般的な Android 開発において、ADT を組み込んだ Eclipse の使用は強く推奨されており、Android 初心者に最も効率的な開発環境を提供します。（Eclipse 以外の IDE で作業する場合は、Eclipse や ADT をインストールする必要はありません。代わりに、SDK ツールを直接使用してアプリケーションを構築し、デバッグを行います）。</p>

<p><a href="#setup">インストールの準備</a>で説明した手順に従って Eclipse をインストールした後は、次の手順に従って操作して ADT プラグインをダウンロードし、それぞれの Eclipse 環境にインストールします。 </p>

<table style="font-size:100%">
<tr><th>Eclipse 3.3（Europa）</th><th>Eclipse 3.4（Ganymede）</th></tr>
<tr>
<td width="45%">
<!-- 3.3 steps -->
<ol>
    <li>Eclipse を起動し、[<strong>ヘルプ</strong>] &gt; [<strong>ソフトウェアの更新</strong>] &gt; [<strong>検索とインストール</strong>] を選択します。 </li>
    <li>表示されるダイアログで [<strong>インストールする新規フィーチャーを検索</strong>] を選択して [<strong>次へ</strong>] をクリックします。 </li>
    <li>[<strong>新規リモートサイト</strong>] をクリックします。 </li>
    <li>表示されるダイアログ ボックスで、リモート サイトの名前（例: 「Android Plugin」）を入力し、URL を入力します:
        <pre>https://dl-ssl.google.com/android/eclipse/</pre>
        <p>プラグインが入手できない場合は、URL の「https」の代わりに「http」を使用してみてください（セキュリティ上の理由からは、https をおすすめします）。</p>
        <p>[<strong>OK</strong>] をクリックします。</p> </li>
    <li>検索リストに新しいサイトが追加されており、チェックボックスがオンの状態で表示されるはずです。[<strong>終了</strong>] をクリックします。 </li>
    <li>次の [検索結果] ダイアログボックスで、「Android Plugin」のチェックボックスをオンにします。これにより、そこに含まれているツール「Android DDMS」と「Android Development Tools」も自動的にオンになります。[<strong>次へ</strong>] をクリックします。</li>
    <li>使用許諾契約を読み、同意して、[<strong>次へ</strong>] をクリックします。 </li>
    <li>次のインストール ウィンドウで [<strong>終了</strong>] をクリックします。 </li>
    <li>ADT プラグインはデジタル署名されていません。[<strong>すべてインストール</strong>] をクリックしてインストールを許可します。 </li>
    <li>Eclipse を再起動します。 </li>
</ol>

</td>
<td>

<!-- 3.4 steps -->
<ol>
    <li>Eclipse を起動し、[<strong>ヘルプ</strong>] &gt; [<strong>ソフトウェアの更新</strong>] を選択します。</li>
    <li>表示されるダイアログで [<strong>使用可能なソフトウェア</strong>] タブをクリックします。 </li>
    <li>[<strong>サイトの追加</strong>] をクリックします。 </li>
    <li>次の場所を入力します:
      <pre>https://dl-ssl.google.com/android/eclipse/</pre>
        <p>プラグインが入手できない場合は、場所の URL の「https」の代わりに「http」を使用してみてください（セキュリティ上の理由からは、https をおすすめします）。</p>   
      <p>[<strong>OK</strong>] をクリックします。</p></li>
    <li>[使用可能なソフトウェア] のタブに戻ると、上記の URL によるプラグインとその中に含まれる「Developer Tools」が表示されているはずです。「Developer Tools」の横のチェックボックスをオンにし、[<strong>インストール</strong>] をクリックします。</li>
    <li>次のインストール ウィンドウで、「Android DDMS」と「Android Development Tools」の両方のチェックボックスがオンになっていることを確認します。[<strong>次へ</strong>] をクリックします。 </li>
    <li>使用許諾契約を読み、同意して、[<strong>終了</strong>] をクリックします。</li>
    <li>Eclipse を再起動します。 </li>
</ol>

</td>
</tr>
</table>

<p>次に、Eclipse の設定を変更して、Android SDK ディレクトリを指すように変更します:</p>
<ol>
    <li>[<strong>ウィンドウ</strong>] &gt; [<strong>設定</strong>] を選択して、[設定] パネルを開きます（Mac 上では [<strong>Eclipse</strong>] &gt; [<strong>設定</strong>]）。</li>
    <li>左側のパネルで [<strong>Android</strong>] を選択します。 </li>
    <li>メイン パネルの [<em>SDK Location</em>] で [<strong>参照</strong>] をクリックし、ダウンロードした SDK ディレクトリを探します。 </li>
    <li>[<strong>適用</strong>] をクリックして、[<strong>OK</strong>] をクリックします。</li>
</ol>

<p>これで完了です。問題なく完了した場合は、Android アプリケーション開発を始める準備が整っています。開発を始めるヒントについては、<a href="#next">次のステップ</a>のセクションをご覧ください。 </p>


<h3 id="troubleshooting">ADT のインストールでのトラブルシューティング</h3>
<p> 
上記の手順で、ADT プラグインのダウンロードに問題が生じた場合のヒントは次のとおりです: </p>

<ul>
  <li>Eclipse から ADT プラグインを含むリモート更新サイトが見つからない場合は、リモート サイトとして指定した URL の https を http に変更してみます。つまり、次のリモート サイトの URL を設定します:
  <pre>http://dl-ssl.google.com/android/eclipse/</pre></li>
  <li>ファイアウォール（社内のファイアウォールなど）の内部にいる場合、Eclipse でプロキシ情報が正しく設定されていることを確認してください。Eclipse 3.3/3.4 でプロキシ情報を設定するには、Eclipse のメイン メニューから [<strong>ウィンドウ</strong>]（Mac 上では [<strong>Eclipse</strong>]）&gt; [<strong>環境設定</strong>] &gt; [<strong>一般</strong>] &gt; [<strong>ネットワーク接続</strong>] を選択します。</li>
</ul>
<p> 
それでも Eclipse を使用して ADT プラグインをリモート更新サイトとしてダウンロードできない場合は、ADT zip ファイルをローカル マシン上にダウンロードして、手動でインストールすることができます:
</p>
<ol>
  <li><a href="{@docRoot}sdk/adt_download.html">ADT zip ファイルをダウンロードします</a>（展開はしないでください）。</li>
  <li>デフォルトのインストール手順（上記）のステップ 1 と 2 のとおりに操作します。</li>
  <li>Eclipse 3.3 では [<strong>新規アーカイブ・サイト</strong>] をクリックします。<br/>Eclipse 3.4 では [<strong>サイトの追加</strong>] をクリックして、[<strong>アーカイブ</strong>] をクリックします。</li>
  <li>ダウンロードした zip ファイルを参照して選択してください。</li>
  <li>上記のステップ 5 から残りの手順に従って操作します。</li>
</ol>
<p>zip ファイルからインストールしたプラグインを後でアップデートする場合は、デフォルトのアップデート手順の代わりに、もう一度この手順どおりに操作する必要があります。</p>

<h4>その他のインストール エラー</h4>

<p>オプションの Eclipse コンポーネント（WST など）を必要とする ADT の機能があります。ADT のインストール時にエラーが発生した場合、お使いの Eclipse インストール環境にこうしたコンポーネントが含まれていない可能性があります。必要なコンポーネントを Eclipse インストール環境に簡単に追加する方法について詳しくは、トラブルシューティング トピック <a href="{@docRoot}resources/faq/troubleshooting.html#installeclipsecomponents">ADT インストールエラー: "requires plug-in org.eclipse.wst.sse.ui"</a> をご覧ください。</p>

<h4>Linux ユーザーの場合</h4>
<p>Eclipse 用 ADT プラグインのインストール時に、次のエラーが発生する場合があります。 
<pre>
An error occurred during provisioning.
Cannot connect to keystore.
JKS</pre>
<p>
この場合、お使いの開発用マシンに適切な Java VM が搭載されていません。Sun Java 6 をインストールするとこの問題が解決し、ADT プラグインを再インストールすることができます。</p>


<h2 id="next">次のステップ</h2>
<p>インストールを完了すると、アプリケーションの開発を始める準備が整います。開発を始める方法をいくつか紹介します: </p>

<p><strong>Android の詳細の学習</strong></p>
<ul>
  <li><a href="{@docRoot}guide/index.html">デベロッパー ガイド</a>と、ガイドに説明されている情報の種類を参照します。</li>
  <li>Android をプラットフォームとして紹介している <a
  href="{@docRoot}guide/basics/what-is-android.html">Android とは</a>を読みます。</li>
  <li><a href="{@docRoot}guide/topics/fundamentals.html">アプリケーションの基礎</a>を参照して、Android フレームワークとそこでのアプリケーションの実行方法について学びます。</li>
  <li>[<a
  href="{@docRoot}reference/packages.html">リファレンス</a>] タブの Android Framework API の仕様を参照します。</li>
</ul>

<p><strong>SDK の探索</strong></p>
<ul>
  <li>利用可能な<a
  href="{@docRoot}guide/developing/tools/index.html">開発ツール</a>の概要を把握します。</li>
  <li><a
  href="{@docRoot}guide/developing/eclipse-adt.html">Eclipse/ADT</a> または<a href="{@docRoot}guide/developing/other-ide.html">別の IDE</a> での開発方法を参照します。
  </li>
</ul>

<p><strong>サンプル コードの参照</strong></p>
<ul>
  <li><a href="{@docRoot}resources/tutorials/hello-world.html">Hello World アプリケーション</a>を構築します（特に Eclipse ユーザーにおすすめです）。</li>
  <li><a href="{@docRoot}resources/tutorials/notepad/index.html">Notepad チュートリアル</a>に沿って Android アプリケーションを完全に構築します。 </li>
  <li><code><em>&lt;sdk&gt;</em>/platforms/<em>&lt;platfrom&gt;</em>/samples</code> に収められている他のサンプル アプリケーションのいずれかを新しいプロジェクトとして作成し、自分の開発環境でコンパイルし、実行します。</li>
</ul>

<p><strong>Android デベロッパー グループへのアクセス</strong></p>
<ul>
  <li>[<a
  href="{@docRoot}resources/community-groups.html">コミュニティ</a>] タブで、Android デベロッパー グループの一覧を参照します。特に <a href="http://groups.google.com/group/android-developers">Android Developers</a> グループは、Android デベロッパー コミュニティがどういうものかを知るのに参考になります。</li>
</ul>


<h2 id="installnotes">インストールに関する注意事項</h2>

<h3>Ubuntu Linux に関する注意事項</h3>

<ul>
  <li>開発マシン上で Java をインストールして設定する方法については、次のリソースが参考になります: 
    <ul>
      <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/Java </a></li>
      <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/JavaInstallation</a></li>
    </ul>
  </li>
  <li>Android SDK と ADT プラグインをインストールする前に、Java と Eclipse をインストールする手順は次のとおりです。
    <ol>
      <li>開発マシン上で 64 ビット版を実行している場合は、<code>apt-get:</code> を使用して <code>ia32-libs</code> パッケージをインストールする必要があります:
      <pre>apt-get install ia32-libs</pre>
      </li>
      <li>次に Java をインストールします: <pre>apt-get install sun-java6-bin</pre></li>
      <li>Ubuntu パッケージ マネージャでは現在、Eclipse 3.3 バージョンのダウンロードを提供していないので、eclipse.org（ <a
      href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a> ）から Eclipse をダウンロードすることをおすすめします。Eclipse の Java バージョンまたは RCP バージョンをおすすめします。</li>
      <li>上記のセクションの手順どおりに SDK と ADT プラグインをインストールします。 </li>
    </ol>
  </li>
</ul>

<h3>その他の Linux に関する注意事項</h3>

<ul>
  <li>開発用コンピュータに JDK が既にインストールされている場合は、<a href="requirements.html">システム要件</a>に記載されているバージョン要件を満たしていることを確認してください。特に、ディストリビューションによっては JDK 1.4 または Gnu Compiler for Java が組み込まれている場合があります。これらは Android の開発ではサポートされていないので、ご注意ください。</li>
</ul>



