Blort.test:(I)I:
regs: 0006; ins: 0001; outs: 0001
  0000: move v0, v5
  0001: move v2, v0
  0002: if-nez v2, 0007 // +0005
  0004: const/4 v2, #int 1 // #1
  0005: move v0, v2
  0006: return v0
  0007: move v2, v0
  0008: const/4 v3, #int 1 // #1
  0009: sub-int/2addr v2, v3
  000a: invoke-static {v2}, Blort.test:(I)I
  000d: move-result v2
  000e: move v0, v2
  000f: move v2, v0
  0010: move v3, v0
  0011: const/4 v4, #int 2 // #2
  0012: sub-int/2addr v3, v4
  0013: invoke-static {v3}, Blort.test:(I)I
  0016: move-result v3
  0017: add-int/2addr v2, v3
  0018: move v0, v2
  0019: move v2, v0
  001a: move v0, v2
  001b: goto 0006 // -0015
  001c: move-exception v2
  001d: move-object v1, v2
  001e: const/4 v2, #int 2 // #2
  001f: move v0, v2
  0020: goto 0006 // -001a
  catches
    tries:
      try 000a..000d
      catch java.lang.RuntimeException -> 001c
Blort.test:(I)I:
regs: 0006; ins: 0001; outs: 0001
  0000: move v0, v5
  0001: move v2, v0
  0002: if-nez v2, 0007 // +0005
  0004: const/4 v2, #int 1 // #1
  0005: move v0, v2
  0006: return v0
  0007: move v2, v0
  0008: const/4 v3, #int 1 // #1
  0009: sub-int/2addr v2, v3
  000a: invoke-static {v2}, Blort.test:(I)I
  000d: move-result v2
  000e: move v0, v2
  000f: move v2, v0
  0010: move v3, v0
  0011: const/4 v4, #int 2 // #2
  0012: sub-int/2addr v3, v4
  0013: invoke-static {v3}, Blort.test:(I)I
  0016: move-result v3
  0017: add-int/2addr v2, v3
  0018: move v0, v2
  0019: move v2, v0
  001a: move v0, v2
  001b: goto 0006 // -0015
  001c: move-exception v2
  001d: move-object v1, v2
  001e: const/4 v2, #int 2 // #2
  001f: move v0, v2
  0020: goto 0006 // -001a
  catches
    tries:
      try 000a..000d
      catch java.lang.RuntimeException -> 001c
  debug info
    line_start: 20
    parameters_size: 0001
    parameter <unnamed> v5
    0000: prologue end
    0000: line 20
    0004: line 21
    0006: line 29
    line = 24
    0007: line 24
    000f: line 28
    0019: line 29
    001c: line 25
    001e: line 26
    end sequence
  source file: "Blort.java"
Blort.test:(I)I:
regs: 0006; ins: 0001; outs: 0001
  0000: move v0, v5
  0001: move v2, v0
  0002: if-nez v2, 0007 // +0005
  0004: const/4 v2, #int 1 // #1
  0005: move v0, v2
  0006: return v0
  0007: move v2, v0
  0008: const/4 v3, #int 1 // #1
  0009: sub-int/2addr v2, v3
  000a: invoke-static {v2}, Blort.test:(I)I
  000d: move-result v2
  000e: move v0, v2
  000f: move v2, v0
  0010: move v3, v0
  0011: const/4 v4, #int 2 // #2
  0012: sub-int/2addr v3, v4
  0013: invoke-static {v3}, Blort.test:(I)I
  0016: move-result v3
  0017: add-int/2addr v2, v3
  0018: move v0, v2
  0019: move v2, v0
  001a: move v0, v2
  001b: goto 0006 // -0015
  001c: move-exception v2
  001d: move-object v1, v2
  001e: const/4 v2, #int 2 // #2
  001f: move v0, v2
  0020: goto 0006 // -001a
  catches
    tries:
      try 000a..000d
      catch java.lang.RuntimeException -> 001c
  debug info
    line_start: 20
    parameters_size: 0001
    parameter <unnamed> v5
    0000: prologue end
    0000: line 20
    0004: line 21
    0006: line 29
    line = 24
    0007: line 24
    000f: line 28
    0019: line 29
    001c: line 25
    001e: line 26
    end sequence
  source file: "Blort.java"
